servers = (
  { address = "chat.freenode.net"; chatnet = "freenode"; port = "6667"; autoconnect = "yes"; },
  { address = "irc.efnet.org"; chatnet = "efnet"; port = "6667"; },
  { address = "irc.dal.net"; chatnet = "dalnet"; port = "6667"; },
  { address = "irc.quakenet.org";chatnet = "quakenet"; port = "6667"; }
);

chatnets = {
  efnet = { type = "IRC"; max_kicks = "4"; max_msgs = "3"; max_whois = "1"; };
  freenode = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; };
  dalnet = { type = "IRC"; max_kicks = "4"; max_msgs = "3"; max_whois = "30"; };
  quakenet = { type = "IRC"; max_kicks = "1"; max_msgs = "3"; max_whois = "30";
  };
};

channels = (
  { name = "##fontbakery"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "##fonts"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#metapolator"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#userops"; chatnet = "freenode"; autojoin = "Yes"; }
);

aliases = {
  L = "clear";
  J = "join";
  HOST = "userhost";
  LAST = "lastlog";
  N = "names";
  M = "msg";
  WC = "window close";
  RUN = "SCRIPT LOAD";
  SBAR = "STATUSBAR";
  Q = "QUERY";
  UNSET = "set -clear";
  RESET = "set -default";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "Dave Crossland";
    user_name = "davelab6";
    nick = "davelab6";
  };
  "fe-text" = { actlist_sort = "refnum"; };
  "fe-common/core" = { autolog = "yes"; autolog_colors = "yes"; };
};
logs = { };
